{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						215,
						214
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/0.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"1": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						215,
						261.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/1.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"2": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						215,
						309
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/2.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"3": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						260,
						297.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/3.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/0.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/3.instance": "M260,253L260,297.5",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/3.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/1.instance": "M260,297.57653405737074L260,341.99966317384167"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"4": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						275,
						372.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/4.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/1.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/4.instance": "M265,303L275,372.5",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/4.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/2.instance": "M275.02136733248614,372.64850296077844L284.99987766763843,441.9991497900875"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"5": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						215,
						214
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/5.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"6": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						352,
						217
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/6.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/5.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/6.instance": "M444,193L352,217",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/6.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/0.instance": "M351.8550427125938,217.03781494454077L260.000611205132,240.99984055518297"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"7": {
				"typename": {
					"type": "string",
					"value": "PigIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						215,
						309
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Pig.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Pig/7.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/PigIcon"
			},
			"8": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						338.35000009008604,
						350.5010067108048
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/8.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/PigIcon/7.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/8.instance": "M413,350L338.35000009008604,350.5010067108048",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/8.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/2.instance": "M338.35040277392625,350.50100400822873L264.00080464843927,350.99999459967495"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"9": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1003,
						148
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"443": {
								"segments": {
									"type": "string",
									"value": "m0,0l0,40,l25,15,l25,-15,l0,-40,l-50,0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										10,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"452": {
								"textContent": {
									"type": "string",
									"value": "S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "24px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										26,
										17
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"453": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										21.50354873937374,
										-1.3284046508472898
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "443",
								"dest": "453"
							},
							{
								"src": "453",
								"dest": "452"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Start/9.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/StartIcon"
			},
			"10": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						978,
						178
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": 2
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/10.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"11": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "EntryLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1166,
						278.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Entry/11.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/StartIcon/9.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink/11.instance": "M1038,187L1166,278.5",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink/11.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/10.instance": "M1166.0609128138922,278.54354314430566L1293.9992994038853,369.9994991832461"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink"
			},
			"12": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						978,
						430.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": "1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/12.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"13": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "nextLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1195,
						521
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next/13.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/10.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/13.instance": "M1051,448L1195,521",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/13.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/12.instance": "M1195.0668307528538,521.0338794788772L1338.9992504947545,593.9996200424797"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink"
			},
			"14": {
				"typename": {
					"type": "string",
					"value": "RuleExitIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1004,
						690.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"441": {
								"segments": {
									"type": "string",
									"value": "m0,0l5,0,l20,12,l20,-12,l5,0,l0,20,l-50,0,l0,-20"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/RuleExit/14.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleExitIcon"
			},
			"15": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "exitLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1090.1317072517809,
						728.0731706954339
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/exit/15.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/12.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink/15.instance": "M1018,688L1090.1317072517809,728.0731706954339",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink/15.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleExitIcon/14.instance": "M1090.131386014899,728.0729922304994L1161.9993580476198,767.9996433597887"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink"
			},
			"16": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1089,
						231
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/16.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"17": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1089,
						278.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/17.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"18": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1440,
						253
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/18.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"19": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1440,
						300.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/19.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"20": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1126,
						545
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/20.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"21": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1454,
						554
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/21.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"22": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						982,
						335.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/22.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/16.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/22.instance": "M1129,269L982,335.5",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/22.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/17.instance": "M981.9317769397951,335.53086281294986L835.0007651199379,401.99965387431376"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"23": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1599.5,
						333
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/23.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/18.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/23.instance": "M1466,296L1599.5,333",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/23.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/19.instance": "M1599.5719792355192,333.01994930123L1732.9990611379078,369.99973979103066"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"24": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1089,
						231
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/24.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"25": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						558
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/25.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"26": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1454,
						554
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/26.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"27": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1440,
						300.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/27.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"28": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						997,
						282.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/28.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/24.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/28.instance": "M883,305L997,282.5",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/28.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/16.instance": "M997.1471595950624,282.4709553430798L1110.9994919687156,260.0001002693325"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"29": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1608.3500000280549,
						329.0033707858863
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/29.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/27.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/29.instance": "M1742,326L1608.3500000280549,329.0033707858863",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/29.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/19.instance": "M1608.35022474703,329.0033657360218L1475.0004492137637,331.99998990530867"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"30": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						970.4996033549985,
						527.9999136141255
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/30.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/25.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/30.instance": "M778,499L970.4996033549985,527.9999136141255",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/30.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/20.instance": "M970.4996033549985,527.9999136141255L1162.999206709997,556.999827228251"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"31": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1211.5,
						581
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/31.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/26.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/31.instance": "M943,582L1211.5,581",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/31.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/21.instance": "M1211.6496647975798,580.9994425892082L1479.999106589127,580.0000033274147"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"32": {
				"typename": {
					"type": "string",
					"value": "PigIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1126,
						545
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Pig.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Pig/32.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/PigIcon"
			},
			"33": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1058.1447368049817,
						624.4585526422096
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/33.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/PigIcon/32.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/33.instance": "M948,656L1058.1447368049817,624.4585526422096",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/33.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/20.instance": "M1058.1444828808926,624.4586253568355L1167.9994924484186,593.0001453443165"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/Bird/Bird.defaultIcons",
			"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"position": {
					"type": "list<int>",
					"value": [
						215,
						214
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"1": {
				"position": {
					"type": "list<int>",
					"value": [
						215,
						261.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"2": {
				"position": {
					"type": "list<int>",
					"value": [
						215,
						309
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"3": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"4": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"5": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						215,
						214
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"6": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"7": {
				"position": {
					"type": "list<int>",
					"value": [
						215,
						309
					]
				},
				"$type": "/Formalisms/Bird/Bird/Pig"
			},
			"8": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"9": {
				"position": {
					"type": "list<int>",
					"value": [
						1003,
						148
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Start"
			},
			"10": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": 2
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						978,
						178
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"11": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Entry"
			},
			"12": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": "1"
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						978,
						430.5
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"13": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next"
			},
			"14": {
				"position": {
					"type": "list<int>",
					"value": [
						1004,
						690.5
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/RuleExit"
			},
			"15": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/exit"
			},
			"16": {
				"position": {
					"type": "list<int>",
					"value": [
						1089,
						231
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"17": {
				"position": {
					"type": "list<int>",
					"value": [
						1089,
						278.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"18": {
				"position": {
					"type": "list<int>",
					"value": [
						1440,
						253
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"19": {
				"position": {
					"type": "list<int>",
					"value": [
						1440,
						300.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"20": {
				"position": {
					"type": "list<int>",
					"value": [
						1126,
						545
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"21": {
				"position": {
					"type": "list<int>",
					"value": [
						1454,
						554
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"22": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"23": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"24": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1089,
						231
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"25": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1067,
						558
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"26": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1454,
						554
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"27": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1440,
						300.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"28": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"29": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"30": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"31": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"32": {
				"position": {
					"type": "list<int>",
					"value": [
						1126,
						545
					]
				},
				"$type": "/Formalisms/Bird/Bird/Pig"
			},
			"33": {
				"$type": "/Formalisms/Bird/Bird/On"
			}
		},
		"edges": [
			{
				"src": "0",
				"dest": "3"
			},
			{
				"src": "3",
				"dest": "1"
			},
			{
				"src": "1",
				"dest": "4"
			},
			{
				"src": "4",
				"dest": "2"
			},
			{
				"src": "5",
				"dest": "6"
			},
			{
				"src": "6",
				"dest": "0"
			},
			{
				"src": "7",
				"dest": "8"
			},
			{
				"src": "8",
				"dest": "2"
			},
			{
				"src": "9",
				"dest": "11"
			},
			{
				"src": "11",
				"dest": "10"
			},
			{
				"src": "10",
				"dest": "13"
			},
			{
				"src": "13",
				"dest": "12"
			},
			{
				"src": "12",
				"dest": "15"
			},
			{
				"src": "15",
				"dest": "14"
			},
			{
				"src": "16",
				"dest": "22"
			},
			{
				"src": "22",
				"dest": "17"
			},
			{
				"src": "18",
				"dest": "23"
			},
			{
				"src": "23",
				"dest": "19"
			},
			{
				"src": "24",
				"dest": "28"
			},
			{
				"src": "28",
				"dest": "16"
			},
			{
				"src": "27",
				"dest": "29"
			},
			{
				"src": "29",
				"dest": "19"
			},
			{
				"src": "25",
				"dest": "30"
			},
			{
				"src": "30",
				"dest": "20"
			},
			{
				"src": "26",
				"dest": "31"
			},
			{
				"src": "31",
				"dest": "21"
			},
			{
				"src": "32",
				"dest": "33"
			},
			{
				"src": "33",
				"dest": "20"
			}
		],
		"metamodels": [
			"/Formalisms/Bird/Bird",
			"/Formalisms/BlockBasedMDE/BlockBasedMDE"
		]
	}
}