{
	"csm": {
		"nodes": {
			"87": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						964,
						190
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"443": {
								"segments": {
									"type": "string",
									"value": "m0,0l0,40,l25,15,l25,-15,l0,-40,l-50,0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										10,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"452": {
								"textContent": {
									"type": "string",
									"value": "S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "24px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										26,
										17
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"453": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										21.50354873937374,
										-1.3284046508472898
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "443",
								"dest": "453"
							},
							{
								"src": "453",
								"dest": "452"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Start/87.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/StartIcon"
			},
			"88": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						220
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/88.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"89": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "EntryLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1048.5,
						318
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Entry/89.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/StartIcon/87.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink/89.instance": "M1001,242L1048.5,318",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink/89.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/88.instance": "M1048.5794310085716,318.1270896137148L1095.999644470885,393.9994311534157"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink"
			},
			"274": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1124,
						301
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/274.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"277": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1423.5,
						336
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/277.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"282": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1124,
						301
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdRight.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/282.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"283": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1423.5,
						336
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/283.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"286": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1028.649999961187,
						333.49140969385275
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/286.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/282.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/286.instance": "M915,340L1028.649999961187,333.49140969385275",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/286.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/274.instance": "M1028.6497356442112,333.4914248309483L1141.9994716761435,327.00003025643235"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"287": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1639.35000001661,
						372.00864553218383
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/287.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/283.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/287.instance": "M1813,362L1639.35000001661,372.00864553218383",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/287.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/277.instance": "M1639.4252593680492,372.00430781740357L1466.0007776495113,381.9999551787026"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"292": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						472.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/292.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"293": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "nextLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1122.6336267384736,
						561.5691901294072
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next/293.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/88.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/293.instance": "M996,496L1122.6336267384736,561.5691901294072",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/293.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/292.instance": "M1122.5665310674979,561.534448892657L1248.999153666257,626.9995617797616"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink"
			},
			"294": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						725
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": "1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/294.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"295": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "nextLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067.5,
						817.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next/295.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/292.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/295.instance": "M1003,753L1067.5,817.5",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/295.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/294.instance": "M1067.6060849713724,817.6060849713725L1131.999533007507,881.999533007507"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink"
			},
			"296": {
				"typename": {
					"type": "string",
					"value": "RuleExitIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						965,
						985
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"441": {
								"segments": {
									"type": "string",
									"value": "m0,0l5,0,l20,12,l20,-12,l5,0,l0,20,l-50,0,l0,-20"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/RuleExit/296.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleExitIcon"
			},
			"297": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "exitLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1046.5,
						1038.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/exit/297.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/294.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink/297.instance": "M1009,1001L1046.5,1038.5",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink/297.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleExitIcon/296.instance": "M1046.5529658974824,1038.5529658974824L1083.9997998767437,1075.999799876744"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink"
			},
			"298": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						503
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/298.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"299": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						550.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/299.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"300": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1393,
						551
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/300.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"301": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1393,
						598.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/301.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"302": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1423,
						835
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/302.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"303": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1072,
						836
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/303.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"304": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1000,
						591.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/304.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/298.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/304.instance": "M1102,533L1000,591.5",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/304.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/299.instance": "M999.870008904071,591.5745537167828L898.0004430259962,649.9997459115609"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"305": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1567,
						638
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/305.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/300.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/305.instance": "M1435,593L1567,638",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/305.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/301.instance": "M1567.0709155810473,638.0241757662661L1698.9990783510245,682.9996858014857"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"306": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1045,
						868
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/306.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"307": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1393,
						598.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/307.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"308": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						503
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/308.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"312": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1423,
						835
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdDown.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/312.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"313": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						944,
						551.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/313.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/308.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/313.instance": "M807,574L944,551.5",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/313.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/298.instance": "M944.0738663315813,551.4878686681709L1080.999036523546,529.0001582351841"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"314": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1115.649751650156,
						607.5096854301096
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/314.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/307.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/314.instance": "M814,588L1115.649751650156,607.5096854301096",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/314.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/301.instance": "M1115.649454130343,607.5096661875347L1416.999206964026,626.9999487091161"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"315": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						940.999753531836,
						745.999741255644
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/315.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/306.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/315.instance": "M797,625L940.999753531836,745.999741255644",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/315.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/303.instance": "M940.999753531836,745.999741255644L1084.999507063672,866.999482511288"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"316": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1192.5,
						886.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/316.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/312.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/316.instance": "M928,913L1192.5,886.5",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/316.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/302.instance": "M1192.6490973149514,886.4850620837573L1456.9990999021777,860.0000901799331"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"317": {
				"typename": {
					"type": "string",
					"value": "PigIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1072,
						836
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Pig.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Pig/317.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/PigIcon"
			},
			"318": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						998,
						860
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/318.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/PigIcon/317.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/318.instance": "M889,863L998,860",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/318.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/303.instance": "M998.1497247287894,859.9958791359048L1106.9994498779565,857.0000151409737"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"319": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						193
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/319.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"320": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						240.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/320.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"321": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						288
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/321.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"322": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						335.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/322.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"323": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						430.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/323.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"324": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						383
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/324.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"325": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						292.9963855491643,
						273.6499997096821
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/325.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/319.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/325.instance": "M294,232L292.9963855491643,273.6499997096821",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/325.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/320.instance": "M292.998197126721,273.57481924108043L292.0000087025413,314.9996388445348"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"326": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						282,
						352
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/326.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/320.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/326.instance": "M263,288L282,352",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/326.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/321.instance": "M282.04272821718087,352.1439266262933L300.99974247110794,415.99913253425837"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"327": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						276.5054123692166,
						425.14999994685945
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/327.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/321.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/327.instance": "M273,328L276.5054123692166,425.14999994685945",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/327.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/322.instance": "M276.50540120970027,425.14969066883685L279.9999776962833,521.9993818684238"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"328": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						285.5078313236171,
						504.6499999677425
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/328.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/322.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/328.instance": "M279,380L285.5078313236171,504.6499999677425",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/328.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/324.instance": "M285.50781874318295,504.64975900404227L291.99997485258854,628.9995183303496"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"329": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						299.0126582248433,
						551.6499999643931
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/329.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/324.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/329.instance": "M289,433L299.0126582248433,551.6499999643931",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/329.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/323.instance": "M299.01263686076084,551.6497468000161L308.9999572958431,669.9994939557407"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"330": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						193
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdRight.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/330.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"331": {
				"typename": {
					"type": "string",
					"value": "PigIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						245,
						430.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Pig.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Pig/331.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/PigIcon"
			},
			"332": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						355,
						458.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/332.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/PigIcon/331.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/332.instance": "M420,455L355,458.5",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/332.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/323.instance": "M354.8504616557157,458.5080520646922L290.0009221301775,461.9999503468366"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"333": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						339.3535715515483,
						237.46309526908942
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/333.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/330.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/333.instance": "M401,253L339.3535715515483,237.46309526908942",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/333.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/319.instance": "M339.3540364029885,237.46321242676947L278.0009287214003,222.0002340679952"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/Bird/Bird.defaultIcons",
			"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"87": {
				"position": {
					"type": "list<int>",
					"value": [
						964,
						190
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Start"
			},
			"88": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": 1
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						220
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"89": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Entry"
			},
			"274": {
				"position": {
					"type": "list<int>",
					"value": [
						1124,
						301
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"277": {
				"position": {
					"type": "list<int>",
					"value": [
						1423.5,
						336
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"282": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Right"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1124,
						301
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"283": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1423.5,
						336
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"286": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"287": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"292": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": 5
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						472.5
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"293": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next"
			},
			"294": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": "1"
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						725
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"295": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next"
			},
			"296": {
				"position": {
					"type": "list<int>",
					"value": [
						965,
						985
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/RuleExit"
			},
			"297": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/exit"
			},
			"298": {
				"position": {
					"type": "list<int>",
					"value": [
						1067,
						503
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"299": {
				"position": {
					"type": "list<int>",
					"value": [
						1067,
						550.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"300": {
				"position": {
					"type": "list<int>",
					"value": [
						1393,
						551
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"301": {
				"position": {
					"type": "list<int>",
					"value": [
						1393,
						598.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"302": {
				"position": {
					"type": "list<int>",
					"value": [
						1423,
						835
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"303": {
				"position": {
					"type": "list<int>",
					"value": [
						1072,
						836
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"304": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"305": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"306": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1045,
						868
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"307": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1393,
						598.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"308": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1067,
						503
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"312": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Down"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1423,
						835
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"313": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"314": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"315": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"316": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"317": {
				"position": {
					"type": "list<int>",
					"value": [
						1072,
						836
					]
				},
				"$type": "/Formalisms/Bird/Bird/Pig"
			},
			"318": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"319": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						193
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"320": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						240.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"321": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						288
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"322": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						335.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"323": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						430.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"324": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						383
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"325": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"326": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"327": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"328": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"329": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"330": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Right"
				},
				"position": {
					"type": "list<int>",
					"value": [
						245,
						193
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"331": {
				"position": {
					"type": "list<int>",
					"value": [
						245,
						430.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Pig"
			},
			"332": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"333": {
				"$type": "/Formalisms/Bird/Bird/On"
			}
		},
		"edges": [
			{
				"src": "87",
				"dest": "89"
			},
			{
				"src": "89",
				"dest": "88"
			},
			{
				"src": "282",
				"dest": "286"
			},
			{
				"src": "286",
				"dest": "274"
			},
			{
				"src": "283",
				"dest": "287"
			},
			{
				"src": "287",
				"dest": "277"
			},
			{
				"src": "88",
				"dest": "293"
			},
			{
				"src": "293",
				"dest": "292"
			},
			{
				"src": "292",
				"dest": "295"
			},
			{
				"src": "295",
				"dest": "294"
			},
			{
				"src": "294",
				"dest": "297"
			},
			{
				"src": "297",
				"dest": "296"
			},
			{
				"src": "298",
				"dest": "304"
			},
			{
				"src": "304",
				"dest": "299"
			},
			{
				"src": "300",
				"dest": "305"
			},
			{
				"src": "305",
				"dest": "301"
			},
			{
				"src": "308",
				"dest": "313"
			},
			{
				"src": "313",
				"dest": "298"
			},
			{
				"src": "307",
				"dest": "314"
			},
			{
				"src": "314",
				"dest": "301"
			},
			{
				"src": "306",
				"dest": "315"
			},
			{
				"src": "315",
				"dest": "303"
			},
			{
				"src": "312",
				"dest": "316"
			},
			{
				"src": "316",
				"dest": "302"
			},
			{
				"src": "317",
				"dest": "318"
			},
			{
				"src": "318",
				"dest": "303"
			},
			{
				"src": "319",
				"dest": "325"
			},
			{
				"src": "325",
				"dest": "320"
			},
			{
				"src": "320",
				"dest": "326"
			},
			{
				"src": "326",
				"dest": "321"
			},
			{
				"src": "321",
				"dest": "327"
			},
			{
				"src": "327",
				"dest": "322"
			},
			{
				"src": "322",
				"dest": "328"
			},
			{
				"src": "328",
				"dest": "324"
			},
			{
				"src": "324",
				"dest": "329"
			},
			{
				"src": "329",
				"dest": "323"
			},
			{
				"src": "331",
				"dest": "332"
			},
			{
				"src": "332",
				"dest": "323"
			},
			{
				"src": "330",
				"dest": "333"
			},
			{
				"src": "333",
				"dest": "319"
			}
		],
		"metamodels": [
			"/Formalisms/Bird/Bird",
			"/Formalisms/BlockBasedMDE/BlockBasedMDE"
		]
	}
}