{
	"csm": {
		"nodes": {
			"87": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						964,
						190
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"443": {
								"segments": {
									"type": "string",
									"value": "m0,0l0,40,l25,15,l25,-15,l0,-40,l-50,0"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										10,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"452": {
								"textContent": {
									"type": "string",
									"value": "S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "24px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										26,
										17
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"453": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										21.50354873937374,
										-1.3284046508472898
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "443",
								"dest": "453"
							},
							{
								"src": "453",
								"dest": "452"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Start/87.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/StartIcon"
			},
			"88": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						220
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": 4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/88.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"89": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "EntryLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1048.5,
						318
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Entry/89.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/StartIcon/87.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink/89.instance": "M1001,242L1048.5,318",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink/89.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/88.instance": "M1048.5794310085716,318.1270896137148L1095.999644470885,393.9994311534157"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/EntryLink"
			},
			"274": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1056,
						322
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/274.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"277": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1400.5,
						339
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/277.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"292": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						472.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/292.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"293": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "nextLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1122.6336267384736,
						561.5691901294072
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next/293.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/88.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/293.instance": "M996,496L1122.6336267384736,561.5691901294072",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/293.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/292.instance": "M1122.5665310674979,561.534448892657L1248.999153666257,626.9995617797616"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink"
			},
			"298": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						503
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/298.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"301": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1393,
						598.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/301.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"307": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1393,
						598.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdUp.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/307.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"308": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1067,
						503
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdRight.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/308.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"313": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						944,
						551.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/313.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/308.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/313.instance": "M807,574L944,551.5",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/313.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/298.instance": "M944.0738663315813,551.4878686681709L1080.999036523546,529.0001582351841"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"314": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1115.649751650156,
						607.5096854301096
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/314.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/307.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/314.instance": "M814,588L1115.649751650156,607.5096854301096",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/314.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/301.instance": "M1115.649454130343,607.5096661875347L1416.999206964026,626.9999487091161"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"360": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						188
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/360.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"361": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						235.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/361.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"362": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						330.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/362.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"364": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						378
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/364.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"365": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						283
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/365.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"366": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						440.968656739692,
						301.1477610843089
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/366.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/360.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/366.instance": "M455,235L440.968656739692,301.1477610843089",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/366.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/361.instance": "M440.9687503015248,301.14732000709745L427.000186937888,366.9991187213853"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"367": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						567.619892452582,
						371.0903225651739
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/367.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/361.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/367.instance": "M456,287L567.619892452582,371.0903225651739",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/367.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/365.instance": "M567.5596884007496,371.0449670463046L678.9992270546536,454.9994176913982"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"368": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						420.45771278191006,
						413.64441483913726
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/368.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/365.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/368.instance": "M447,323L420.45771278191006,413.64441483913726",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/368.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/362.instance": "M420.45780275464693,413.6441075737532L394.00017981805576,503.9993859043757"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"369": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						507.0948186189093,
						447.11658026915075
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/369.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/362.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/369.instance": "M446,372L507.0948186189093,447.11658026915075",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/369.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/364.instance": "M507.09462210377717,447.116338652185L567.9996072408384,521.9995170993914"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"377": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						426
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/377.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"378": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						578.9998770946203,
						405.49990034698936
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/378.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/364.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/378.instance": "M461,426L578.9998770946203,405.49990034698936",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/378.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/377.instance": "M578.9998770946203,405.49990034698936L696.9997541892405,384.9998006939787"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"379": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						220,
						426
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/379.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"380": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						267.5,
						426
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/380.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"381": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						315,
						426
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/381.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"382": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						362.5,
						426
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/382.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"383": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "eastLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						329.6437930122596,
						492.54448273041123
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/east/383.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/379.instance--/Formalisms/Bird/Bird.defaultIcons/eastLink/383.instance": "M260,471L329.6437930122596,492.54448273041123",
						"/Formalisms/Bird/Bird.defaultIcons/eastLink/383.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/380.instance": "M329.643396342382,492.54436001958584L398.9992073882487,513.999754803559"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/eastLink"
			},
			"384": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "eastLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						351.99974386120266,
						542.4999451131148
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/east/384.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/380.instance--/Formalisms/Bird/Bird.defaultIcons/eastLink/384.instance": "M159,569L351.99974386120266,542.4999451131148",
						"/Formalisms/Bird/Bird.defaultIcons/eastLink/384.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/381.instance": "M351.99974386120266,542.4999451131148L544.9994877224053,515.9998902262297"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/eastLink"
			},
			"385": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "eastLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						458.9996253598423,
						556.9999209574233
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/east/385.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/381.instance--/Formalisms/Bird/Bird.defaultIcons/eastLink/385.instance": "M205,571L458.9996253598423,556.9999209574233",
						"/Formalisms/Bird/Bird.defaultIcons/eastLink/385.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/382.instance": "M458.9996253598423,556.9999209574233L712.9992507196846,542.9998419148467"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/eastLink"
			},
			"386": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "eastLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						424.99975184716243,
						467.50013608381414
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/east/386.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/382.instance--/Formalisms/Bird/Bird.defaultIcons/eastLink/386.instance": "M412.99999999999994,468L424.99975184716243,467.50013608381414",
						"/Formalisms/Bird/Bird.defaultIcons/eastLink/386.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/377.instance": "M424.99975184716243,467.50013608381414L436.99950369432486,467.0002721676283"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/eastLink"
			},
			"387": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						220,
						426
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdRight.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/387.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"388": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						190.10526310989675,
						393.10701749506165
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/388.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/387.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/388.instance": "M130,332L190.10526310989675,393.10701749506165",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/388.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/379.instance": "M190.10501688062365,393.1067671619674L249.9995079247656,453.9994997235117"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"389": {
				"typename": {
					"type": "string",
					"value": "PigIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						188
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Pig.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Pig/389.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/PigIcon"
			},
			"390": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						364.1459458571062,
						219.96148650993032
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/390.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/PigIcon/389.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/390.instance": "M292,239L364.1459458571062,219.96148650993032",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/390.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/360.instance": "M364.14555140932197,219.9615906003178L435.9992118137129,201.00020799360354"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"391": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1103.5,
						322
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/391.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"392": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "eastLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1399.5,
						334
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/east/392.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/274.instance--/Formalisms/Bird/Bird.defaultIcons/eastLink/392.instance": "M1095,343L1399.5,334",
						"/Formalisms/Bird/Bird.defaultIcons/eastLink/392.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/391.instance": "M1399.6497044281368,333.9955752385772L1703.9992121677842,325.00002328568127"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/eastLink"
			},
			"393": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1353,
						339
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/393.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"394": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "eastLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1420.649999709682,
						369.4837349712393
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/east/394.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/393.instance--/Formalisms/Bird/Bird.defaultIcons/eastLink/394.instance": "M1379,374L1420.649999709682,369.4837349712393",
						"/Formalisms/Bird/Bird.defaultIcons/eastLink/394.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/277.instance": "M1420.5748192410804,369.4918870702443L1461.9996388445347,365.000039161436"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/eastLink"
			},
			"395": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1056,
						322
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdRight.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/395.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"396": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1400.5,
						339
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdRight.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/396.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"397": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1588.5,
						387
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/397.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/396.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/397.instance": "M1736,392L1588.5,387",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/397.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/277.instance": "M1588.4253050875836,386.9974679690707L1441.0009146337259,382.0000310045331"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"398": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						878.6499999857778,
						354.99920000007586
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/398.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/395.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/398.instance": "M691,356L878.6499999857778,354.99920000007586",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/398.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/274.instance": "M878.5747599982392,354.99960128000936L1065.999280384,354.000003837952"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"399": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						725
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/399.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"400": {
				"typename": {
					"type": "string",
					"value": "RuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						939,
						977.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"415": {
								"segments": {
									"type": "string",
									"value": "M0 0, L15 0, L40 15, L65 0, L600 0, L600 40, L560 40, L560 0, L600 0, L600 250, L275 250, L325 125, L275 0, L325 125, L275 250, L65 250, L40 265, L15, 250, L0 250, Z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n\n"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										20,
										20
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"428": {
								"textContent": {
									"type": "string",
									"value": "1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "30px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"count\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										587,
										29
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"429": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										310.3180556244391,
										30.00517241358807
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"432": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n\n({\"textContent\": getAttr(\"name\")})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										46
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"433": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										40.167795414870085,
										38.49989052968249
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "415",
								"dest": "429"
							},
							{
								"src": "429",
								"dest": "428"
							},
							{
								"src": "415",
								"dest": "433"
							},
							{
								"src": "433",
								"dest": "432"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule/400.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon"
			},
			"401": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "nextLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1084.5772727079645,
						824.6292207469323
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next/401.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/292.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/401.instance": "M1025,725L1084.5772727079645,824.6292207469323",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/401.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/399.instance": "M1084.5771389024765,824.6289969881748L1143.9997325432885,923.9995527404574"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink"
			},
			"402": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "nextLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1165.109954743627,
						1114.1024886807882
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next/402.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/399.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/402.instance": "M1003,963L1165.109954743627,1114.1024886807882",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink/402.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/400.instance": "M1165.054828114792,1114.0511052181087L1326.9995524230856,1264.9995828141107"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/nextLink"
			},
			"403": {
				"typename": {
					"type": "string",
					"value": "RuleExitIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						965,
						1237.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr('position')})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr('position')})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"441": {
								"segments": {
									"type": "string",
									"value": "m0,0l5,0,l20,12,l20,-12,l5,0,l0,20,l-50,0,l0,-20"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "yellow",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										15
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/RuleExit/403.instance"
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleExitIcon"
			},
			"404": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "exitLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1026.5762930278506,
						1294.630603318863
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/BlockBasedMDE/BlockBasedMDE/exit/404.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleIcon/400.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink/404.instance": "M997,1244L1026.5762930278506,1294.630603318863",
						"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink/404.instance--/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/RuleExitIcon/403.instance": "M1026.5380807724064,1294.5651891188654L1055.999868535764,1344.9997749510537"
					}
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons/exitLink"
			},
			"405": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1016,
						794
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/405.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"406": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1016,
						841.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/406.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"407": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1001,
						1091
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/407.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"408": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1430,
						838
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/408.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"409": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1380,
						1102
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/409.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"410": {
				"typename": {
					"type": "string",
					"value": "EmptyIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1430,
						885.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Empty.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Empty/410.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/EmptyIcon"
			},
			"411": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						986.5,
						874.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/411.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/405.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/411.instance": "M1051,822L986.5,874.5",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/411.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/406.instance": "M986.3837146735016,874.59465084715L922.0005613139159,926.9995431165801"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"412": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "southLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1563.6349999501385,
						915.5655262915877
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/south/412.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/408.instance--/Formalisms/Bird/Bird.defaultIcons/southLink/412.instance": "M1478,874L1563.6349999501385,915.5655262915877",
						"/Formalisms/Bird/Bird.defaultIcons/southLink/412.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/410.instance": "M1563.6347157399264,915.5653883416018L1648.9994319778393,956.9997242933372"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/southLink"
			},
			"413": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1430,
						838
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdUp.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/413.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"414": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1016,
						841.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdUp.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/414.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"415": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1079,
						1103
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdUp.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/415.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"416": {
				"typename": {
					"type": "string",
					"value": "BirdIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1380,
						1102
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/BirdUp.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "if(getAttr('facing')=='Right')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdRight.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Left')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdLeft.png\"\n})\n}\n\nelse{if(getAttr('facing')=='Up')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdUp.png\"\n})\n}\nelse{if(getAttr('facing')=='Down')\n{\n({\nsrc:\"/Formalisms/Bird/icons/BirdDown.png\"\n})\n}}}}"
								},
								"parser": {
									"type": "code",
									"value": ""
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Bird/416.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/BirdIcon"
			},
			"417": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						958.6492020713739,
						881.9840425592114
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/417.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/414.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/417.instance": "M865,892L958.6492020713739,881.9840425592114",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/417.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/406.instance": "M958.648884620397,881.9840765111875L1051.9993655476148,872.0000678558702"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"418": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1578.8537688934557,
						880.9638191076591
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/418.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/413.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/418.instance": "M1676,905L1578.8537688934557,880.9638191076591",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/418.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/408.instance": "M1578.854062825131,880.9638918330222L1482.0005874700641,857.000145353418"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"419": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1027.4998740201963,
						1139.500011645192
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/419.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/415.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/419.instance": "M1007,1151L1027.4998740201963,1139.500011645192",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/419.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/407.instance": "M1027.4998740201963,1139.500011645192L1047.9997480403927,1128.0000232903838"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"420": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1564.350000023946,
						1130.5046712795313
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/420.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/BirdIcon/416.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/420.instance": "M1709,1126L1564.350000023946,1130.5046712795313",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/420.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/409.instance": "M1564.4253114216413,1130.5023259418865L1420.0009336095113,1134.9999709256551"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			},
			"421": {
				"typename": {
					"type": "string",
					"value": "PigIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1001,
						1091
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/Bird/icons/Pig.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/Pig/421.instance"
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/PigIcon"
			},
			"422": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 0
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "OnLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						914.6499999567334,
						1122.0111627874778
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/Bird/Bird/On/422.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/Bird/Bird.defaultIcons/PigIcon/421.instance--/Formalisms/Bird/Bird.defaultIcons/OnLink/422.instance": "M807,1114L914.6499999567334,1122.0111627874778",
						"/Formalisms/Bird/Bird.defaultIcons/OnLink/422.instance--/Formalisms/Bird/Bird.defaultIcons/EmptyIcon/407.instance": "M914.649720887207,1122.011142019513L1021.9994422065982,1129.9999584897935"
					}
				},
				"$type": "/Formalisms/Bird/Bird.defaultIcons/OnLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/Bird/Bird.defaultIcons",
			"/Formalisms/BlockBasedMDE/BlockBasedMDE.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"87": {
				"position": {
					"type": "list<int>",
					"value": [
						964,
						190
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Start"
			},
			"88": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": 4
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						220
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"89": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Entry"
			},
			"274": {
				"position": {
					"type": "list<int>",
					"value": [
						1056,
						322
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"277": {
				"position": {
					"type": "list<int>",
					"value": [
						1400.5,
						339
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"292": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": 1
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						472.5
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"293": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next"
			},
			"298": {
				"position": {
					"type": "list<int>",
					"value": [
						1067,
						503
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"301": {
				"position": {
					"type": "list<int>",
					"value": [
						1393,
						598.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"307": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Up"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1393,
						598.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"308": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Right"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1067,
						503
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"313": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"314": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"360": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						188
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"361": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						235.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"362": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						330.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"364": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						378
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"365": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						283
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"366": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"367": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"368": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"369": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"377": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						426
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"378": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"379": {
				"position": {
					"type": "list<int>",
					"value": [
						220,
						426
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"380": {
				"position": {
					"type": "list<int>",
					"value": [
						267.5,
						426
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"381": {
				"position": {
					"type": "list<int>",
					"value": [
						315,
						426
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"382": {
				"position": {
					"type": "list<int>",
					"value": [
						362.5,
						426
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"383": {
				"$type": "/Formalisms/Bird/Bird/east"
			},
			"384": {
				"$type": "/Formalisms/Bird/Bird/east"
			},
			"385": {
				"$type": "/Formalisms/Bird/Bird/east"
			},
			"386": {
				"$type": "/Formalisms/Bird/Bird/east"
			},
			"387": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Right"
				},
				"position": {
					"type": "list<int>",
					"value": [
						220,
						426
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"388": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"389": {
				"position": {
					"type": "list<int>",
					"value": [
						410,
						188
					]
				},
				"$type": "/Formalisms/Bird/Bird/Pig"
			},
			"390": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"391": {
				"position": {
					"type": "list<int>",
					"value": [
						1103.5,
						322
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"392": {
				"$type": "/Formalisms/Bird/Bird/east"
			},
			"393": {
				"position": {
					"type": "list<int>",
					"value": [
						1353,
						339
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"394": {
				"$type": "/Formalisms/Bird/Bird/east"
			},
			"395": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Right"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1056,
						322
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"396": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Right"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1400.5,
						339
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"397": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"398": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"399": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": 5
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						725
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"400": {
				"RHS": {
					"type": "string",
					"value": ""
				},
				"LHS": {
					"type": "string",
					"value": ""
				},
				"count": {
					"type": "int",
					"value": "1"
				},
				"name": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						939,
						977.5
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/Rule"
			},
			"401": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next"
			},
			"402": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/next"
			},
			"403": {
				"position": {
					"type": "list<int>",
					"value": [
						965,
						1237.5
					]
				},
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/RuleExit"
			},
			"404": {
				"$type": "/Formalisms/BlockBasedMDE/BlockBasedMDE/exit"
			},
			"405": {
				"position": {
					"type": "list<int>",
					"value": [
						1016,
						794
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"406": {
				"position": {
					"type": "list<int>",
					"value": [
						1016,
						841.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"407": {
				"position": {
					"type": "list<int>",
					"value": [
						1001,
						1091
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"408": {
				"position": {
					"type": "list<int>",
					"value": [
						1430,
						838
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"409": {
				"position": {
					"type": "list<int>",
					"value": [
						1380,
						1102
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"410": {
				"position": {
					"type": "list<int>",
					"value": [
						1430,
						885.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Empty"
			},
			"411": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"412": {
				"$type": "/Formalisms/Bird/Bird/south"
			},
			"413": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Up"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1430,
						838
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"414": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Up"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1016,
						841.5
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"415": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Up"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1079,
						1103
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"416": {
				"facing": {
					"type": "ENUM(Up,Down,Right,Left)",
					"value": "Up"
				},
				"position": {
					"type": "list<int>",
					"value": [
						1380,
						1102
					]
				},
				"$type": "/Formalisms/Bird/Bird/Bird"
			},
			"417": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"418": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"419": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"420": {
				"$type": "/Formalisms/Bird/Bird/On"
			},
			"421": {
				"position": {
					"type": "list<int>",
					"value": [
						1001,
						1091
					]
				},
				"$type": "/Formalisms/Bird/Bird/Pig"
			},
			"422": {
				"$type": "/Formalisms/Bird/Bird/On"
			}
		},
		"edges": [
			{
				"src": "87",
				"dest": "89"
			},
			{
				"src": "89",
				"dest": "88"
			},
			{
				"src": "88",
				"dest": "293"
			},
			{
				"src": "293",
				"dest": "292"
			},
			{
				"src": "308",
				"dest": "313"
			},
			{
				"src": "313",
				"dest": "298"
			},
			{
				"src": "307",
				"dest": "314"
			},
			{
				"src": "314",
				"dest": "301"
			},
			{
				"src": "360",
				"dest": "366"
			},
			{
				"src": "366",
				"dest": "361"
			},
			{
				"src": "361",
				"dest": "367"
			},
			{
				"src": "367",
				"dest": "365"
			},
			{
				"src": "365",
				"dest": "368"
			},
			{
				"src": "368",
				"dest": "362"
			},
			{
				"src": "362",
				"dest": "369"
			},
			{
				"src": "369",
				"dest": "364"
			},
			{
				"src": "364",
				"dest": "378"
			},
			{
				"src": "378",
				"dest": "377"
			},
			{
				"src": "379",
				"dest": "383"
			},
			{
				"src": "383",
				"dest": "380"
			},
			{
				"src": "380",
				"dest": "384"
			},
			{
				"src": "384",
				"dest": "381"
			},
			{
				"src": "381",
				"dest": "385"
			},
			{
				"src": "385",
				"dest": "382"
			},
			{
				"src": "382",
				"dest": "386"
			},
			{
				"src": "386",
				"dest": "377"
			},
			{
				"src": "387",
				"dest": "388"
			},
			{
				"src": "388",
				"dest": "379"
			},
			{
				"src": "389",
				"dest": "390"
			},
			{
				"src": "390",
				"dest": "360"
			},
			{
				"src": "274",
				"dest": "392"
			},
			{
				"src": "392",
				"dest": "391"
			},
			{
				"src": "393",
				"dest": "394"
			},
			{
				"src": "394",
				"dest": "277"
			},
			{
				"src": "396",
				"dest": "397"
			},
			{
				"src": "397",
				"dest": "277"
			},
			{
				"src": "395",
				"dest": "398"
			},
			{
				"src": "398",
				"dest": "274"
			},
			{
				"src": "292",
				"dest": "401"
			},
			{
				"src": "401",
				"dest": "399"
			},
			{
				"src": "399",
				"dest": "402"
			},
			{
				"src": "402",
				"dest": "400"
			},
			{
				"src": "400",
				"dest": "404"
			},
			{
				"src": "404",
				"dest": "403"
			},
			{
				"src": "405",
				"dest": "411"
			},
			{
				"src": "411",
				"dest": "406"
			},
			{
				"src": "408",
				"dest": "412"
			},
			{
				"src": "412",
				"dest": "410"
			},
			{
				"src": "414",
				"dest": "417"
			},
			{
				"src": "417",
				"dest": "406"
			},
			{
				"src": "413",
				"dest": "418"
			},
			{
				"src": "418",
				"dest": "408"
			},
			{
				"src": "415",
				"dest": "419"
			},
			{
				"src": "419",
				"dest": "407"
			},
			{
				"src": "416",
				"dest": "420"
			},
			{
				"src": "420",
				"dest": "409"
			},
			{
				"src": "421",
				"dest": "422"
			},
			{
				"src": "422",
				"dest": "407"
			}
		],
		"metamodels": [
			"/Formalisms/Bird/Bird",
			"/Formalisms/BlockBasedMDE/BlockBasedMDE"
		]
	}
}